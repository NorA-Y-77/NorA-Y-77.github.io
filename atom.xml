<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Station7</title>
  
  <subtitle>喜欢就坚持吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-21T10:27:01.088Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Nora</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Scrapy 爬虫框架学习 (一)</title>
    <link href="http://yoursite.com/2019/10/21/Scrapy%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0-%E4%B8%80/"/>
    <id>http://yoursite.com/2019/10/21/Scrapy爬虫框架学习-一/</id>
    <published>2019-10-21T08:39:44.000Z</published>
    <updated>2019-10-21T10:27:01.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Scrapy-框架"><a href="#Scrapy-框架" class="headerlink" title="Scrapy 框架"></a>Scrapy 框架</h1><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><blockquote><p>Scrapy 是一个为了爬取网站数据，提取结构性数据而编写的应用框架。可以应用在包括数据挖掘，信息处理或储存历史数据等一系列的程序中。</p></blockquote><p>基本的 Scrapy 框架由以下几部分组成：</p><p>Scrapy Engine 引擎</p><p>Spiders 爬虫</p><p>Scheduler 调度器</p><p>Downloader 下载器</p><a id="more"></a><p>Item Pipeline 数据管道</p><p>Downloader Middlewares 下载中间件</p><p>Spider Middlewares 爬虫中间件</p><p>** 基本的运行流程：**</p><p>爬虫开始运行时，Spider 会将输入的 url 请求打包为 Requests 对象发送给引擎。引擎将接收到的 Requests 对象发送给调度器，调度器将获取到的一个或数个请求进行排序并返回给引擎。之后引擎将打包排序好的请求发送给下载器，下载器根据请求中的 url 访问相应的页面并获取 Responses 对象，返回给引擎。引擎再将返回的 Responses 对象发送给 Spiders 进行进一步处理为 Items 对象。最后再经过引擎向数据管道发送 Items 对象（所需数据），由数据管道将这些经过处理的数据存入文件。</p><h2 id="安装-Scrapy"><a href="#安装-Scrapy" class="headerlink" title="安装 Scrapy"></a>安装 Scrapy</h2><p>Scrapy 的安装十分简单，使用 pip 安装即可。<br>** 在 cmd 中：**</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure><h2 id="创建-Scrapy-项目"><a href="#创建-Scrapy-项目" class="headerlink" title="创建 Scrapy 项目"></a>创建 Scrapy 项目</h2><p>如同安装 scrapy 一样，scrapy 的项目创建也非常简单。** 在需要创建 Scrapy 项目的目录下在 cmd 中输入：**(test 可为任意项目名)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject test_1</span><br></pre></td></tr></table></figure><p>当看到该目录下出现以下文件夹即说明项目创建成功</p><p><img src="/pics/mulu.jpg" alt="content"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Scrapy-框架&quot;&gt;&lt;a href=&quot;#Scrapy-框架&quot; class=&quot;headerlink&quot; title=&quot;Scrapy 框架&quot;&gt;&lt;/a&gt;Scrapy 框架&lt;/h1&gt;&lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;基本介绍&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Scrapy 是一个为了爬取网站数据，提取结构性数据而编写的应用框架。可以应用在包括数据挖掘，信息处理或储存历史数据等一系列的程序中。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;基本的 Scrapy 框架由以下几部分组成：&lt;/p&gt;&lt;p&gt;Scrapy Engine 引擎&lt;/p&gt;&lt;p&gt;Spiders 爬虫&lt;/p&gt;&lt;p&gt;Scheduler 调度器&lt;/p&gt;&lt;p&gt;Downloader 下载器&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程学习" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="爬虫 Python Scrapy" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB-Python-Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Python -- schedule 模块</title>
    <link href="http://yoursite.com/2019/09/30/Python-schedule%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2019/09/30/Python-schedule模块/</id>
    <published>2019-09-30T11:53:23.000Z</published>
    <updated>2019-10-21T09:38:42.797Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Schedule-模块"><a href="#Schedule-模块" class="headerlink" title="Schedule 模块"></a>Schedule 模块</h1><p>Schedule 模块可以用来实现程序的定时功能，即在特定时间完成某个功能。</p><p>Python 中有两个内置的标准库 <code>time</code> 和 <code>datetime</code> 可以用来实现同样功能，但代码会比较复杂，使用 <code>Schedule</code> 模块可简化代码。</p><p>详细使用方法参见 <a href="https://schedule.readthedocs.io/en/stable/" target="_blank" rel="noopener">官方文档</a><br>这里只粗略介绍</p><p>与任何第三方库相同，在 python 中调用前需安装该库。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install schedule</span><br></pre></td></tr></table></figure><p>使用 import 语句调用</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">import</span> time <span class="comment"># 调用 time 模块进行自检 </span></span><br></pre></td></tr></table></figure><p>以官方文档案例为例</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">()</span>:</span></span><br><span class="line">    print (<span class="string">"I'm working..."</span>)</span><br><span class="line"><span class="comment"># 定义一个函数 job , 功能为打印字符串 </span></span><br><span class="line"></span><br><span class="line">schedule.every (<span class="number">10</span>).minutes.do (job)      <span class="comment"># 部署每 10 分钟执行一次 job () 函数 </span></span><br><span class="line">schedule.every ().hour.do (job)       <span class="comment"># 部署每 x 小时执行一次 job () 函数 </span></span><br><span class="line">schedule.every ().day.at (<span class="string">"10:30"</span>).do (job)        <span class="comment"># 部署在每天 10：30 执行 job () 函数 </span></span><br><span class="line">schedule.every ().monday.do (job)     <span class="comment"># 部署每个星期一执行 job () 函数 </span></span><br><span class="line">schedule.every ().wednesday.at (<span class="string">"10:30"</span>).do (job)      <span class="comment"># 部署每周三的 10：30 执行一次 job () 函数 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending ()</span><br><span class="line">    time.sleep (<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 检查部署的情况（每间隔 1 秒），如果任务准备就绪，就开始执行任务 </span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Schedule-模块&quot;&gt;&lt;a href=&quot;#Schedule-模块&quot; class=&quot;headerlink&quot; title=&quot;Schedule 模块&quot;&gt;&lt;/a&gt;Schedule 模块&lt;/h1&gt;&lt;p&gt;Schedule 模块可以用来实现程序的定时功能，即在特定时间完成某个功能。&lt;/p&gt;&lt;p&gt;Python 中有两个内置的标准库 &lt;code&gt;time&lt;/code&gt; 和 &lt;code&gt;datetime&lt;/code&gt; 可以用来实现同样功能，但代码会比较复杂，使用 &lt;code&gt;Schedule&lt;/code&gt; 模块可简化代码。&lt;/p&gt;&lt;p&gt;详细使用方法参见 &lt;a href=&quot;https://schedule.readthedocs.io/en/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;这里只粗略介绍&lt;/p&gt;&lt;p&gt;与任何第三方库相同，在 python 中调用前需安装该库。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>这是一篇测试文章</title>
    <link href="http://yoursite.com/2019/09/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2019/09/30/我的第一篇博客文章/</id>
    <published>2019-09-29T18:05:15.000Z</published>
    <updated>2019-09-30T04:04:05.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><p>这是正文内容：</p><ul><li>测试 1</li><li>测试 2</li><li>测试 3</li></ul><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><p>测试</p><p>内容</p><hr><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><hr><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一级标题&quot;&gt;&lt;/a&gt;这是一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/30/hello-world/"/>
    <id>http://yoursite.com/2019/09/30/hello-world/</id>
    <published>2019-09-29T17:55:28.379Z</published>
    <updated>2019-09-29T17:55:28.380Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
